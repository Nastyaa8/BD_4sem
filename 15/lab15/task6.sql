USE univer;
GO
DROP TRIGGER IF EXISTS TR_TEACHER_DEL1;
DROP TRIGGER IF EXISTS TR_TEACHER_DEL2;
DROP TRIGGER IF EXISTS TR_TEACHER_DEL3;
GO


IF OBJECT_ID('dbo.TR_AUDIT', 'U') IS NULL
BEGIN
    CREATE TABLE TR_AUDIT (
        ID INT IDENTITY(1,1) PRIMARY KEY,
        STMT NVARCHAR(10),
        TRNAME NVARCHAR(100),
        CC NVARCHAR(300),
        LOGDATE DATETIME DEFAULT GETDATE()
    );
END
GO


CREATE TRIGGER TR_TEACHER_DEL1
ON TEACHER
AFTER DELETE
AS
BEGIN
    PRINT 'TR_TEACHER_DEL1';
    INSERT INTO TR_AUDIT (STMT, TRNAME, CC)
    SELECT
        'DEL',
        'TR_TEACHER_DEL1',
        d.TEACHER + N' ' + d.TEACHER_NAME + N' ' + d.GENDER + N' ' + d.PULPIT
    FROM deleted d;
END
GO


CREATE TRIGGER TR_TEACHER_DEL2
ON TEACHER
AFTER DELETE
AS
BEGIN
    PRINT 'TR_TEACHER_DEL2';
    INSERT INTO TR_AUDIT (STMT, TRNAME, CC)
    SELECT
        'DEL',
        'TR_TEACHER_DEL2',
        d.TEACHER + N' ' + d.TEACHER_NAME + N' ' + d.GENDER + N' ' + d.PULPIT
    FROM deleted d;
END
GO


CREATE TRIGGER TR_TEACHER_DEL3
ON TEACHER
AFTER DELETE
AS
BEGIN
    PRINT 'TR_TEACHER_DEL3';
    INSERT INTO TR_AUDIT (STMT, TRNAME, CC)
    SELECT
        'DEL',
        'TR_TEACHER_DEL3',
        d.TEACHER + N' ' + d.TEACHER_NAME + N' ' + d.GENDER + N' ' + d.PULPIT
    FROM deleted d;
END
GO


EXEC SP_SETTRIGGERORDER @triggername = 'TR_TEACHER_DEL3', @order = 'First', @stmttype = 'DELETE';
EXEC SP_SETTRIGGERORDER @triggername = 'TR_TEACHER_DEL2', @order = 'Last', @stmttype = 'DELETE';
GO

INSERT INTO TEACHER(TEACHER, TEACHER_NAME, GENDER, PULPIT)
VALUES ('FD', 'ForDelete', 'F', 'ISIT');
GO

SELECT * FROM TEACHER WHERE TEACHER = 'FD';
GO

DELETE FROM TEACHER WHERE TEACHER = 'FD';
GO

SELECT * FROM TR_AUDIT;
GO
